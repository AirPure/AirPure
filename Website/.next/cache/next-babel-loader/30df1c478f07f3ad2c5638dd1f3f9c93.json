{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Conta\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Arquivos\\\\TERCEIRO PERIODO\\\\Iniciacao\\\\AirPure.git\\\\trunk\\\\Website\\\\pages\\\\admin\\\\dashboard.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\"; // node.js library that concatenates classes (strings)\n\nimport classnames from \"classnames\"; // javascipt plugin for creating charts\n\nimport Chart from \"chart.js\"; // react plugin used to create charts\n\nimport { Line, Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport { chartOptions, parseOptions, chartExample1, chartExample2 } from \"variables/charts.js\";\nimport Header from \"components/Headers/Header.js\";\n\nvar Dashboard = /*#__PURE__*/function (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleNavs\", function (e, index) {\n      e.preventDefault();\n\n      _this.setState({\n        activeNav: index,\n        chartExample1Data: _this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n      });\n    });\n\n    _this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\"\n    };\n\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(Header, null), __jsx(Container, {\n        className: \"mt--7\",\n        fluid: true\n      }, __jsx(Row, null, __jsx(Col, {\n        className: \"mb-5 mb-xl-0\",\n        xl: \"8\"\n      }, __jsx(Card, {\n        className: \"shadow\"\n      }, __jsx(CardHeader, {\n        className: \"bg-transparent\"\n      }, __jsx(Row, {\n        className: \"align-items-center\"\n      }, __jsx(\"div\", {\n        className: \"col\"\n      }, __jsx(\"h6\", {\n        className: \"text-uppercase text-light ls-1 mb-1\"\n      }, \"Vis\\xE3o Geral\"), __jsx(\"h2\", {\n        className: \"mb-0\"\n      }, \"Temperatura (19/12/20 - 01/01/21)\")), __jsx(\"div\", {\n        className: \"col\"\n      }, __jsx(Nav, {\n        className: \"justify-content-end\",\n        pills: true\n      }, __jsx(NavItem, null, __jsx(NavLink, {\n        className: classnames(\"py-2 px-3\", {\n          active: this.state.activeNav === 1\n        }),\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return _this2.toggleNavs(e, 1);\n        }\n      }, __jsx(\"span\", {\n        className: \"d-none d-md-block\"\n      }, \"M\\xEAs\"), __jsx(\"span\", {\n        className: \"d-md-none\"\n      }, \"M\"))), __jsx(NavItem, null, __jsx(NavLink, {\n        className: classnames(\"py-2 px-3\", {\n          active: this.state.activeNav === 2\n        }),\n        \"data-toggle\": \"tab\",\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return _this2.toggleNavs(e, 2);\n        }\n      }, __jsx(\"span\", {\n        className: \"d-none d-md-block\"\n      }, \"Week\"), __jsx(\"span\", {\n        className: \"d-md-none\"\n      }, \"W\"))))))), __jsx(CardBody, null, __jsx(\"div\", {\n        className: \"chart\"\n      }, __jsx(Line, {\n        data: chartExample1[this.state.chartExample1Data],\n        options: chartExample1.options,\n        getDatasetAtEvent: function getDatasetAtEvent(e) {\n          return console.log(e);\n        }\n      }))))), __jsx(Col, {\n        xl: \"4\"\n      }, __jsx(Card, {\n        className: \"shadow\"\n      }, __jsx(CardHeader, {\n        className: \"bg-transparent\"\n      }, __jsx(Row, {\n        className: \"align-items-center\"\n      }, __jsx(\"div\", {\n        className: \"col\"\n      }, __jsx(\"h6\", {\n        className: \"text-uppercase text-muted ls-1 mb-1\"\n      }, \"De olho\"), __jsx(\"h2\", {\n        className: \"mb-0\"\n      }, \"Avisos\")))), __jsx(CardBody, null, __jsx(\"div\", {\n        className: \"chart\"\n      }, __jsx(Bar, {\n        data: chartExample2.data,\n        options: chartExample2.options\n      }))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.layout = Admin;\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/Conta/OneDrive/√Årea de Trabalho/Arquivos/TERCEIRO PERIODO/Iniciacao/AirPure.git/trunk/Website/pages/admin/dashboard.js"],"names":["React","classnames","Chart","Line","Bar","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Progress","Table","Container","Row","Col","Admin","chartOptions","parseOptions","chartExample1","chartExample2","Header","Dashboard","props","e","index","preventDefault","setState","activeNav","chartExample1Data","state","window","active","toggleNavs","options","console","log","data","Component","layout"],"mappings":"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","sourcesContent":["import React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n// layout for this page\nimport Admin from \"layouts/Admin.js\";\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2,\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\",\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\",\n    });\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Vis√£o Geral\n                      </h6>\n                      <h2 className=\"mb-0\">Temperatura (19/12/20 - 01/01/21)</h2>\n                    </div>\n                    <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1,\n                            })}\n                            href=\"#pablo\"\n                            onClick={(e) => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">M√™s</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2,\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={(e) => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Line\n                      data={chartExample1[this.state.chartExample1Data]}\n                      options={chartExample1.options}\n                      getDatasetAtEvent={(e) => console.log(e)}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        De olho\n                      </h6>\n                      <h2 className=\"mb-0\">Avisos</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          \n        </Container>\n      </>\n    );\n  }\n}\n\nDashboard.layout = Admin;\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}